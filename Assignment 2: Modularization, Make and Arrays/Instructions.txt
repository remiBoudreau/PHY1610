You're given a c++ code ants.cc (click on the file to download) that simulates ants walking on a table. The direction in which they walk depends on where they are on the table, and they can fall of the edge. The program prints the number of ants left on the table after every time step. You will restructure this code in the following way:

Save the original code and its output, so you can check that your restructuring did not break anything.
Replace the automatic 2d arrays with dynamically allocated arrays.
Modularize the code. There should be separate modules for
initialization
single time step
output per time step
a 'driver' main function that puts it altogether
Please recall that a proper "modularization" implies, separating your functions in several files (header with prototypes, preprocessor guards and necessary includes, and source files with the implementation of such functions).
A Makefile should be written to compile this modular code.
Ensure your code is clearly commented.
Submit your code files (source and header files), your makefile, and the output of the program by January 25, 2018. The late policy can be found in the syllabus.

